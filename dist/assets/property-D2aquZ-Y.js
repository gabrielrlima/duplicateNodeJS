import{b7 as A,a9 as p,b$ as S,r as O,a8 as I}from"./index-D82XrlGq.js";import{u as P,m as b}from"./index-nX3EE7Rc.js";const $={revalidateIfStale:!0,revalidateOnFocus:!1,revalidateOnReconnect:!0,dedupingInterval:2e3};function T(){const{currentRealEstate:o}=A(),e=o?`${p.property.list}?real_estate_id=${o.id}`:null,{data:i,isLoading:a,error:d,isValidating:t}=P(e,S,$);return O.useMemo(()=>({properties:(i==null?void 0:i.data)||[],propertiesLoading:a,propertiesError:d,propertiesValidating:t,propertiesEmpty:!a&&!t&&(!(i!=null&&i.data)||i.data.length===0)}),[i==null?void 0:i.data,d,a,t])}async function B(o,e){var i,a,d,t,c,h,v,N;try{console.log("🔄 updateProperty - Dados recebidos:",e),console.log("🔍 ANÁLISE DETALHADA DOS DADOS RECEBIDOS:"),console.log("   - propertyId:",o,typeof o),console.log("   - propertyData keys:",Object.keys(e)),console.log("   - propertyData.type:",e.type,typeof e.type),console.log("   - propertyData.title:",e.title,typeof e.title),console.log("   - propertyData.address:",e.address,typeof e.address),["area","builtArea","value","bedrooms","bathrooms","parkingSpaces"].forEach(l=>{const n=e[l],g=Number(n);console.log(`   - ${l}: original=${n} (${typeof n}) → converted=${g} (isNaN: ${isNaN(g)})`)});let s={name:e.title||e.name||"",title:e.title||"",description:e.description||"",type:e.type||"imovel",status:e.status||"available",area:Number(e.area)||Number(e.builtArea)||0,builtArea:Number(e.builtArea)||0,value:Number(e.value)||0,bedrooms:Number(e.bedrooms)||0,bathrooms:Number(e.bathrooms)||0,parkingSpaces:Number(e.parkingSpaces)||0,elevator:!!e.elevator,furnished:!!e.furnished,hasBalcony:!!e.hasBalcony,acceptsFinancing:!!e.acceptsFinancing,acceptsExchange:!!e.acceptsExchange,exclusiveProperty:!!e.exclusiveProperty,highlightProperty:!!e.highlightProperty,address:e.address?typeof e.address=="string"?{street:e.address||"",number:"",complement:"",neighborhood:"",city:"",state:"",zipCode:"",country:"Brasil"}:e.address:{street:"",number:"",complement:"",neighborhood:"",city:"",state:"",zipCode:"",country:"Brasil"}};console.log("🔍 ANÁLISE DOS DADOS MAPEADOS (BASE):"),Object.entries(s).forEach(([l,n])=>{console.log(`   - ${l}: ${n} (${typeof n}) ${n===null?"[NULL]":""} ${n===void 0?"[UNDEFINED]":""} ${typeof n=="number"&&isNaN(n)?"[NaN]":""}`)}),e.type==="empreendimento"?(console.log("🏢 Mapeando campos específicos de empreendimento"),console.log("   - construtora:",e.construtora,typeof e.construtora),console.log("   - previsaoEntrega:",e.previsaoEntrega,typeof e.previsaoEntrega),console.log("   - unidadesDisponiveis:",e.unidadesDisponiveis,typeof e.unidadesDisponiveis,"→",Number(e.unidadesDisponiveis),"isNaN:",isNaN(Number(e.unidadesDisponiveis))),console.log("   - availableUnits:",e.availableUnits,typeof e.availableUnits),console.log("   - plantas:",e.plantas,Array.isArray(e.plantas),"length:",Array.isArray(e.plantas)?e.plantas.length:"N/A"),s={...s,construtora:e.construtora||"",previsaoEntrega:e.previsaoEntrega||void 0,unidadesDisponiveis:Number(e.unidadesDisponiveis)||Number(e.availableUnits)||0,availableUnits:Number(e.availableUnits)||Number(e.unidadesDisponiveis)||0,plantas:Array.isArray(e.plantas)?e.plantas:[],type:"empreendimento"}):e.type==="terreno"&&(console.log("🏞️ Mapeando campos específicos de terreno"),console.log("   - frente:",e.frente,typeof e.frente,"→",Number(e.frente)),console.log("   - tipoSolo:",e.tipoSolo,typeof e.tipoSolo),console.log("   - zoneamento:",e.zoneamento,typeof e.zoneamento),s={...s,frontage:Number(e.frente)||0,topography:e.tipoSolo||"flat",zoning:e.zoneamento||"residential"}),console.log("🔄 updateProperty - Dados mapeados FINAIS:",s),console.log("🚨 VALIDAÇÃO FINAL ANTES DO ENVIO:");const u={hasUndefined:Object.entries(s).filter(([l,n])=>n===void 0),hasNull:Object.entries(s).filter(([l,n])=>n===null),hasNaN:Object.entries(s).filter(([l,n])=>typeof n=="number"&&isNaN(n)),hasEmptyStrings:Object.entries(s).filter(([l,n])=>typeof n=="string"&&n===""),addressValidation:{isObject:typeof s.address=="object",hasRequiredFields:s.address&&typeof s.address=="object"?["street","city","state"].every(l=>l in s.address):!1}};console.log("   - Campos undefined:",u.hasUndefined),console.log("   - Campos null:",u.hasNull),console.log("   - Campos NaN:",u.hasNaN),console.log("   - Strings vazias:",u.hasEmptyStrings),console.log("   - Validação endereço:",u.addressValidation);const f=[...u.hasUndefined.map(([l])=>`${l} é undefined`),...u.hasNull.map(([l])=>`${l} é null`),...u.hasNaN.map(([l])=>`${l} é NaN`)];f.length>0&&console.error("🚨 PROBLEMAS CRÍTICOS DETECTADOS:",f),console.log("📤 ENVIANDO PARA API:"),console.log("   - URL:",`${p.property.update}/${o}`),console.log("   - Method: PUT"),console.log("   - Headers: Content-Type: application/json"),console.log("   - Body (stringified):",JSON.stringify(s,null,2)),console.log("   - Body size:",JSON.stringify(s).length,"characters");const m=await I.put(`${p.property.update}/${o}`,s,{headers:{"Content-Type":"application/json"}});if(console.log("📥 RESPOSTA DA API:"),console.log("   - Status:",m.status),console.log("   - StatusText:",m.statusText),console.log("   - Headers:",m.headers),console.log("   - Data:",m.data),m.data.success){console.log("✅ updateProperty - Produto atualizado com sucesso!"),console.log("📋 Dados atualizados:",m.data.data),console.log("🗂️ Invalidando cache...");const l=[];b(g=>{if(typeof g=="string"){const E=g.includes("/api/products")||g.includes("/api/property")||g.includes("real_estate_id");return E&&l.push(g),E}return!1});const n=`${p.property.details}/${o}`;return b(n),console.log("✅ Cache invalidado! Total de chaves:",l.length),m.data}throw new Error(m.data.message||"Erro ao atualizar produto")}catch(r){if(console.error("❌ ERRO DETALHADO AO ATUALIZAR PRODUTO:"),console.error("   - propertyId:",o),console.error("   - error.name:",r.name),console.error("   - error.message:",r.message),console.error("   - error.stack:",r.stack),r.response?(console.error("   - response.status:",r.response.status),console.error("   - response.statusText:",r.response.statusText),console.error("   - response.headers:",r.response.headers),console.error("   - response.data:",r.response.data),console.error("   - response.config.url:",(i=r.response.config)==null?void 0:i.url),console.error("   - response.config.method:",(a=r.response.config)==null?void 0:a.method),console.error("   - response.config.data:",(d=r.response.config)==null?void 0:d.data)):r.request&&console.error("   - request:",r.request),console.error("   - propertyData enviado:",e),console.error("   - timestamp:",new Date().toISOString()),((t=r.response)==null?void 0:t.status)===400){const s=r.response.data;throw console.error("🚨 ERRO 400 - ANÁLISE DETALHADA:"),console.error("   - message:",s==null?void 0:s.message),console.error("   - errors:",s==null?void 0:s.errors),console.error("   - details:",s==null?void 0:s.details),console.error("   - validation:",s==null?void 0:s.validation),new Error(`Dados inválidos: ${(s==null?void 0:s.message)||"Verifique os campos obrigatórios"}`)}else throw((c=r.response)==null?void 0:c.status)===404?new Error("Produto não encontrado"):((h=r.response)==null?void 0:h.status)===401?new Error("Não autorizado. Faça login novamente."):new Error(((N=(v=r.response)==null?void 0:v.data)==null?void 0:N.message)||r.message||"Erro ao atualizar produto")}}function L(o){const{currentRealEstate:e}=A(),i=o&&e?`${p.property.details}/${o}?real_estate_id=${e.id}`:null,{data:a,isLoading:d,error:t,isValidating:c}=P(i,S,$);return console.log("🔍 useGetProperty Debug:",{propertyId:o,currentRealEstate:e==null?void 0:e.id,url:i,isLoading:d,error:t==null?void 0:t.message,rawData:a,extractedProperty:a==null?void 0:a.data}),O.useMemo(()=>({property:a==null?void 0:a.data,propertyLoading:d,propertyError:t,propertyValidating:c}),[a==null?void 0:a.data,t,d,c])}function w(o){console.log("🔄 Mapeando dados do frontend:",o);const e={imovel:"imovel",terreno:"terreno",empreendimento:"empreendimento",apartamento:"imovel",casa:"imovel",comercial:"imovel"},i={name:o.titulo||o.name||"Produto sem título",title:o.titulo||o.title||"",description:o.descricao||o.description||"Propriedade criada via sistema",type:e[o.tipo]||o.type||"imovel",status:"available",area:Number(o.area||o.areaConstruida||1),builtArea:Number(o.areaConstruida||o.area||0),value:Number(o.preco||o.value||0),bedrooms:Number(o.quartos||o.bedrooms||0),bathrooms:Number(o.banheiros||o.bathrooms||0),parkingSpaces:Number(o.garagem||o.parkingSpaces||0),elevator:!1,furnished:!1,hasBalcony:!1,acceptsFinancing:!0,acceptsExchange:!1,exclusiveProperty:!1,highlightProperty:!1,address:{street:o.rua||o.localizacao||"",number:o.numero||"",complement:o.complemento||"",neighborhood:o.bairro||"",city:o.cidade||"",state:o.estado||"",zipCode:o.cep||"",country:"Brasil"},realEstateId:o.realEstateId||""};return o.tipo==="empreendimento"?(console.log("🏢 Adicionando campos específicos de empreendimento"),i.construtora=o.construtora||"",i.previsaoEntrega=o.previsaoEntrega||void 0,i.unidadesDisponiveis=Number(o.unidadesDisponiveis)||0,i.plantas=Array.isArray(o.plantas)?o.plantas:[]):o.tipo==="terreno"&&(console.log("🏞️ Adicionando campos específicos de terreno"),i.frente=Number(o.frente)||0,i.tipoSolo=o.tipoSolo||"plano",i.zoneamento=o.zoneamento||""),console.log("✅ Dados mapeados para backend:",i),i}async function C(o){try{if(console.log("🚀 Dados recebidos para criação:",o),!o.realEstateId)throw new Error("ID da imobiliária é obrigatório para criar uma propriedade");const e=w(o);if(!e.realEstateId)throw new Error("Erro no mapeamento: ID da imobiliária não foi definido");console.log("📤 Enviando dados mapeados para API...");const i=await I.post(p.property.create,e,{headers:{"Content-Type":"application/json"}});if(i.data.success){console.log("✅ createProperty - Sucesso! Iniciando invalidação do cache..."),console.log("📋 Dados do imóvel criado:",i.data.data),console.log("🗂️ Invalidando cache com padrões...");const a=[];b(c=>{if(typeof c=="string"){const h=c.includes("/api/products")||c.includes("/api/property")||c.includes("real_estate_id");return h&&(a.push(c),console.log("🔑 Invalidando chave:",c)),h}return!1});const d=e.realEstateId,t=`${p.property.list}?real_estate_id=${d}`;return console.log("🔄 Forçando revalidação específica:",t),b(t,void 0,{revalidate:!0}),b(()=>!0,void 0,{revalidate:!0}),console.log("📊 Total de chaves invalidadas:",a.length),console.log("✅ Invalidação do cache concluída!"),i.data}throw new Error(i.data.message||"Erro ao criar imóvel")}catch(e){throw console.error("❌ Erro ao criar imóvel:",e),e}}export{L as a,B as b,C as c,T as u};

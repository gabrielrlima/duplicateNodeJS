import{V as $e,u as qe,a as Ue,b7 as Fe,r as g,Y as Oe,y as Re,z as we,eB as Be,dS as Ve,c5 as R,a9 as ke,p as _,j as a,S as N,T as S,I as D,B as I,f as q,K as c,aq as ue,D as w,cd as t,a0 as B,a_ as Le,F as Ge,N as Je,aS as _e,aT as Ze,aU as He,aV as Qe,O as ve,eC as H,bD as E,Q as b,e7 as xe,bE as We}from"./index-D82XrlGq.js";import{b as Ye,c as Ke}from"./property-D2aquZ-Y.js";import{m as he}from"./index-nX3EE7Rc.js";import{C as V}from"./Card-Bw-3A9ev.js";import{A as Xe,a as ye,b as Pe}from"./AccordionDetails-B7sICnQH.js";import{C as Z}from"./CardHeader-BbCWHGKm.js";import{A as ea}from"./AlertTitle-HXLRpkws.js";const Q=ve({tipo:xe(["imovel","terreno","empreendimento"],{required_error:"Selecione o tipo de produto",invalid_type_error:"Tipo de produto inválido"}).default("imovel"),titulo:b().min(3,{message:"Título deve ter pelo menos 3 caracteres"}).max(100,{message:"Título não pode exceder 100 caracteres"}).regex(/^[a-zA-ZÀ-ÿ0-9\s\-.,:]+$/,{message:"Título contém caracteres inválidos"}),rua:b().min(3,{message:"Rua deve ter pelo menos 3 caracteres"}).max(100,{message:"Rua muito longa"}),numero:b().min(1,{message:"Número é obrigatório"}).max(10,{message:"Número muito longo"}),complemento:b().max(50,{message:"Complemento muito longo"}).optional(),bairro:b().min(2,{message:"Bairro deve ter pelo menos 2 caracteres"}).max(50,{message:"Bairro muito longo"}),cidade:b().min(2,{message:"Cidade deve ter pelo menos 2 caracteres"}).max(50,{message:"Cidade muito longa"}),estado:b().length(2,{message:"Estado deve ter 2 caracteres (sigla)"}),cep:b().regex(/^\d{5}-?\d{3}$/,{message:"CEP deve ter formato 00000-000"}),descricao:b().min(10,{message:"Descrição deve ter pelo menos 10 caracteres"}).max(1e3,{message:"Descrição não pode exceder 1000 caracteres"})}),aa=Q.extend({preco:E.number({required_error:"Preço é obrigatório"}).positive({message:"Preço deve ser maior que 0"}).max(999999999,{message:"Preço muito alto"}),quartos:E.number().min(1,{message:"Número de quartos é obrigatório!"}),banheiros:E.number().min(1,{message:"Número de banheiros é obrigatório!"}),garagem:E.number().min(0,{message:"Número de vagas na garagem!"}),areaConstruida:E.number().positive({message:"Área construída é obrigatória!"})}),oa=Q.extend({preco:E.number({required_error:"Preço é obrigatório"}).positive({message:"Preço deve ser maior que 0"}).max(999999999,{message:"Preço muito alto"}),area:E.number().positive({message:"Área do terreno é obrigatória!"}),frente:E.number().positive({message:"Frente do terreno é obrigatória!"}),tipoSolo:xe(["plano","inclinado","irregular"]).default("plano"),zoneamento:b().min(1,{message:"Zoneamento é obrigatório!"})}),sa=ve({id:b().optional(),area:E.number().positive({message:"Área da planta é obrigatória!"}),precoPorM2:E.number().positive({message:"Preço por m² é obrigatório!"}),descricao:b().optional()}),ia=Q.extend({construtora:b().optional(),previsaoEntrega:b().optional(),unidadesDisponiveis:E.number().min(0,{message:"Unidades disponíveis não pode ser negativo!"}).optional(),plantas:We(sa).optional()}),la=aa.extend({tipo:H("imovel")}),na=oa.extend({tipo:H("terreno")}),ta=ia.extend({tipo:H("empreendimento")}),da=Be("tipo",[la,na,ta]);function Sa({currentProperty:e}){var de,re,ce,me;const U=$e(),be=qe(),W=Ue(be.breakpoints.down("md")),{currentRealEstate:u}=Fe(),[p,Y]=g.useState((e==null?void 0:e.tipo)||"imovel"),[K,fe]=g.useState({basic:!0,specific:!0,actions:!0}),M=Oe(),[k,L]=g.useState(!1),[je,X]=g.useState(!1),[y,ra]=g.useState(null);g.useRef();const F=Re({resolver:we(da),defaultValues:{tipo:"imovel",titulo:"",preco:0,rua:"",numero:"",complemento:"",bairro:"",cidade:"",estado:"",cep:"",descricao:"",quartos:1,banheiros:1,garagem:0,areaConstruida:0,area:0,frente:0,tipoSolo:"plano",zoneamento:"",precoPorM2:0,construtora:"",previsaoEntrega:new Date().toISOString(),unidadesDisponiveis:1,plantas:[],...e?{tipo:e.tipo||e.type||"imovel",titulo:e.titulo||e.title||e.name||"",preco:e.preco||e.value||e.salePrice||0,rua:e.street||(typeof e.localizacao=="object"?e.localizacao.endereco:"")||"",numero:e.streetNumber||e.number||(typeof e.localizacao=="object"?e.localizacao.numero:"")||"",complemento:e.complement||(typeof e.localizacao=="object"?e.localizacao.complemento:"")||"",bairro:e.neighborhood||(typeof e.localizacao=="object"?e.localizacao.bairro:"")||"",cidade:e.city||(typeof e.localizacao=="object"?e.localizacao.cidade:"")||"",estado:e.state||(typeof e.localizacao=="object"?e.localizacao.estado:"")||"",cep:e.zipCode||e.cep||(typeof e.localizacao=="object"?e.localizacao.cep:"")||"",descricao:e.descricao||e.description||"",quartos:((de=e.caracteristicas)==null?void 0:de.quartos)||e.bedrooms||1,banheiros:((re=e.caracteristicas)==null?void 0:re.banheiros)||e.bathrooms||1,garagem:((ce=e.caracteristicas)==null?void 0:ce.vagasGaragem)||e.parkingSpaces||0,areaConstruida:e.area||e.builtArea||0,area:e.area||e.totalArea||0,frente:0,tipoSolo:"plano",zoneamento:"",construtora:typeof e.construtora=="string"?e.construtora:typeof e.construtora=="object"&&((me=e.construtora)!=null&&me.name)?e.construtora.name:typeof e.constructor=="string"?e.constructor:"",previsaoEntrega:e.previsaoEntrega||e.deliveryDate||e.expectedCompletion||new Date().toISOString(),unidadesDisponiveis:e.unidadesDisponiveis||e.availableUnits||e.totalUnits||1,plantas:e.plantas||e.floorPlans||[],precoPorM2:e.precoM2||e.pricePerSquareMeter||e.pricePerSqm||0}:{}}}),{handleSubmit:Se,watch:Ee,setValue:i,getValues:ma,reset:P,control:Ce,formState:{errors:pa,isDirty:ee}}=F;Ee("plantas");const{fields:j,append:O,remove:ae}=Ve({control:Ce,name:"plantas"}),oe=g.useCallback(()=>{j.length<10&&O({area:0,precoPorM2:0,descricao:""})},[O,j.length]),se=g.useCallback(r=>{j.length>1&&ae(r)},[ae,j.length]),[z,Ne]=g.useState(!1),[G,De]=g.useState(null);g.useEffect(()=>{var s,C,$,o;console.log("🔄 RESET USEEFFECT - Executando com:",{hasCurrentProperty:!!e,hasInitialized:z,currentPropertyId:e==null?void 0:e.id,timestamp:new Date().toISOString()});const r=e&&(!z||G!==e.id);if(r){console.log("🚨 RESET DETECTADO - Iniciando reset do formulário!"),console.log("🔍 Dados recebidos do backend (INICIAL):",e),console.log("🔍 Campos disponíveis:",Object.keys(e)),console.log("🔍 Tipo original (tipo):",e.tipo),console.log("🔍 Tipo original (type):",e.type),console.log("🔍 Tipo final mapeado:",e.tipo||e.type||"imovel"),console.log("🔍 Address completo:",e.address),console.log("🔍 Street individual:",e.street),console.log("🔍 City individual:",e.city),console.log("🔍 State individual:",e.state),console.log("🏢 DADOS ESPECÍFICOS DE EMPREENDIMENTO:"),console.log("   - construtora:",e.construtora,typeof e.construtora),console.log("   - previsaoEntrega:",e.previsaoEntrega,typeof e.previsaoEntrega),console.log("   - unidadesDisponiveis:",e.unidadesDisponiveis,typeof e.unidadesDisponiveis),console.log("   - plantas:",e.plantas,Array.isArray(e.plantas)),console.log("   - type:",e.type);const v={tipo:e.tipo||e.type||"imovel",titulo:e.titulo||e.title||e.name||"",preco:e.preco||e.value||e.salePrice||0,rua:e.street||(typeof e.localizacao=="object"?e.localizacao.endereco:"")||"",numero:e.streetNumber||e.number||(typeof e.localizacao=="object"?e.localizacao.numero:"")||"",complemento:e.complement||(typeof e.localizacao=="object"?e.localizacao.complemento:"")||"",bairro:e.neighborhood||(typeof e.localizacao=="object"?e.localizacao.bairro:"")||"",cidade:e.city||(typeof e.localizacao=="object"?e.localizacao.cidade:"")||"",estado:e.state||(typeof e.localizacao=="object"?e.localizacao.estado:"")||"",cep:e.zipCode||e.cep||(typeof e.localizacao=="object"?e.localizacao.cep:"")||"",descricao:e.descricao||e.description||"",quartos:((s=e.caracteristicas)==null?void 0:s.quartos)||e.bedrooms||1,banheiros:((C=e.caracteristicas)==null?void 0:C.banheiros)||e.bathrooms||1,garagem:(($=e.caracteristicas)==null?void 0:$.vagasGaragem)||e.parkingSpaces||0,areaConstruida:e.area||e.builtArea||0,area:e.area||e.totalArea||0,frente:0,tipoSolo:"plano",zoneamento:"",construtora:typeof e.construtora=="string"?e.construtora:typeof e.construtora=="object"&&((o=e.construtora)!=null&&o.name)?e.construtora.name:typeof e.constructor=="string"?e.constructor:"",previsaoEntrega:e.previsaoEntrega||e.deliveryDate||e.expectedCompletion||new Date().toISOString(),unidadesDisponiveis:e.unidadesDisponiveis||e.availableUnits||e.totalUnits||1,plantas:e.plantas||e.floorPlans||[],precoPorM2:e.precoM2||e.pricePerSquareMeter||e.pricePerSqm||0};console.log("🔄 Valores mapeados para reset (INICIAL):",v),console.log("🏢 VALORES ESPECÍFICOS DE EMPREENDIMENTO MAPEADOS:"),console.log("   - construtora:",v.construtora,typeof v.construtora),console.log("   - previsaoEntrega:",v.previsaoEntrega,typeof v.previsaoEntrega),console.log("   - unidadesDisponiveis:",v.unidadesDisponiveis,typeof v.unidadesDisponiveis),console.log("   - plantas:",v.plantas,Array.isArray(v.plantas)),console.log("🔄 RESET - Executando reset com valores:",v),P(v),console.log("🔄 RESET - Reset executado, definindo watchedType:",v.tipo),Y(v.tipo),console.log("🔄 RESET - Marcando como inicializado para propriedade:",e.id),Ne(!0),De(e.id),console.log("✅ Formulário resetado com sucesso (INICIAL)"),setTimeout(()=>{var T;const x=F.getValues();console.log("🔍 VERIFICAÇÃO PÓS-RESET:"),console.log("   - construtora no form:",x.construtora,typeof x.construtora),console.log("   - previsaoEntrega no form:",x.previsaoEntrega,typeof x.previsaoEntrega),console.log("   - unidadesDisponiveis no form:",x.unidadesDisponiveis,typeof x.unidadesDisponiveis),console.log("   - plantas no form:",((T=x.plantas)==null?void 0:T.length)||0,x.plantas)},100)}else console.log("🔄 RESET USEEFFECT - Condições não atendidas para reset:",{hasCurrentProperty:!!e,hasInitialized:z,initializedPropertyId:G,currentPropertyId:e==null?void 0:e.id,shouldReset:r})},[e,P,z,G,F]);const ie=g.useCallback(r=>{const s=r;Y(s),i("tipo",s),s==="imovel"?(i("area",void 0),i("frente",void 0),i("tipoSolo",void 0),i("zoneamento",void 0),i("construtora",void 0),i("previsaoEntrega",void 0),i("unidadesDisponiveis",void 0),i("plantas",void 0),i("preco",0),i("quartos",1),i("banheiros",1),i("garagem",0),i("areaConstruida",0)):s==="terreno"?(i("quartos",void 0),i("banheiros",void 0),i("garagem",void 0),i("areaConstruida",void 0),i("construtora",void 0),i("previsaoEntrega",void 0),i("unidadesDisponiveis",void 0),i("plantas",void 0),i("preco",0),i("area",0),i("frente",0),i("tipoSolo","plano"),i("zoneamento","")):s==="empreendimento"&&(i("preco",void 0),i("quartos",void 0),i("banheiros",void 0),i("garagem",void 0),i("areaConstruida",void 0),i("area",void 0),i("frente",void 0),i("tipoSolo",void 0),i("zoneamento",void 0),i("construtora",""),i("previsaoEntrega",new Date().toISOString()),i("unidadesDisponiveis",1),i("plantas",[])),L(!0)},[i]),le=g.useCallback(r=>{fe(s=>({...s,[r]:!s[r]}))},[]),Ae=g.useCallback((r,s)=>{console.log(`🧹 [${s.toUpperCase()}] SANITIZAÇÃO - Dados originais:`,JSON.stringify(r,null,2)),console.log(`🔍 [${s.toUpperCase()}] ANÁLISE DETALHADA:`),Object.entries(r).forEach(([n,l])=>{const d=typeof l,f=Array.isArray(l),m=l===null,A=l===void 0,ze=d==="number"&&Number.isNaN(l);console.log(`   - ${n}: ${l} (${d}) ${f?"[ARRAY]":""} ${m?"[NULL]":""} ${A?"[UNDEFINED]":""} ${ze?"[NaN]":""} ${d==="string"&&l===""?"[EMPTY]":""}`)});const $=["titulo","tipo"].filter(n=>!r[n]||typeof r[n]=="string"&&r[n].trim()==="");if($.length>0)throw console.error(`❌ [${s.toUpperCase()}] Campos obrigatórios ausentes:`,$),new Error(`Campos obrigatórios ausentes: ${$.join(", ")}`);const o={...r};Object.keys(o).forEach(n=>{typeof o[n]=="string"&&(o[n]=o[n].trim())}),["preco","area","areaConstruida","quartos","banheiros","garagem","frente","unidadesDisponiveis"].forEach(n=>{if(n in o){const l=o[n],d=Number(l);isNaN(d)||l===null||l===void 0||l===""?(o[n]=0,console.log(`🧹 [${s.toUpperCase()}] Sanitizado ${n}: ${l} → 0`)):(o[n]=Math.max(0,d),l!==o[n]&&console.log(`🧹 [${s.toUpperCase()}] Sanitizado ${n}: ${l} → ${o[n]}`))}}),console.log(`🧹 [${s.toUpperCase()}] Dados após sanitização:`,JSON.stringify(o,null,2));const x={title:String(o.titulo||"").trim(),description:String(o.descricao||"").trim(),type:String(o.tipo||"imovel").trim(),address:{street:String(o.rua||"").trim(),number:String(o.numero||"").trim(),complement:String(o.complemento||"").trim(),neighborhood:String(o.bairro||"").trim(),city:String(o.cidade||"").trim(),state:String(o.estado||"").trim(),zipCode:String(o.cep||"").trim(),country:"Brasil"},realEstateId:u==null?void 0:u.id};console.log(`🗺️ [${s.toUpperCase()}] Base data mapeado:`,JSON.stringify(x,null,2));let T={...x};if(o.tipo==="empreendimento"){const n=o.unidadesDisponiveis,l=Number(n);console.log(`🏢 [${s.toUpperCase()}] Validando empreendimento:`),console.log("   - unidadesDisponiveis original:",n,typeof n),console.log("   - unidadesDisponiveis convertido:",l,typeof l),console.log("   - isNaN(unidadesNum):",isNaN(l)),console.log("   - construtora:",o.construtora,typeof o.construtora),console.log("   - previsaoEntrega:",o.previsaoEntrega,typeof o.previsaoEntrega),console.log("   - plantas:",o.plantas,Array.isArray(o.plantas));let d=o.previsaoEntrega;(!d||d===""||d===null)&&(d=new Date().toISOString(),console.log(`🧹 [${s.toUpperCase()}] Previsão de entrega vazia, usando data atual:`,d)),T={...x,construtora:String(o.construtora||"").trim(),previsaoEntrega:d,unidadesDisponiveis:Math.max(0,Math.floor(l)),availableUnits:Math.max(0,Math.floor(l)),plantas:(()=>{if(console.log(`🌱 [${s.toUpperCase()}] PROCESSANDO PLANTAS:`),console.log("   - plantas originais:",o.plantas,Array.isArray(o.plantas)),!Array.isArray(o.plantas))return console.log("   - plantas não é array, retornando array vazio"),[];const f=o.plantas.filter(m=>{const A=m&&typeof m=="object"&&m.area&&m.precoPorM2;return console.log(`   - planta ${(m==null?void 0:m.id)||"sem-id"}:`,m,"válida:",A),A});return console.log(`   - plantas válidas (${f.length}):`,f),f})(),area:Math.max(100,Number(o.areaConstruida)||100),value:0}}else if(o.tipo==="terreno"){const n=Number(o.preco),l=Number(o.area),d=Number(o.frente);console.log(`🏞️ [${s.toUpperCase()}] Validando terreno:`),console.log("   - preco:",o.preco,"→",n,isNaN(n)),console.log("   - area:",o.area,"→",l,isNaN(l)),console.log("   - frente:",o.frente,"→",d,isNaN(d)),console.log("   - tipoSolo:",o.tipoSolo,typeof o.tipoSolo),console.log("   - zoneamento:",o.zoneamento,typeof o.zoneamento),T={...x,value:Math.max(0,n),area:Math.max(0,l),totalArea:Math.max(0,l),frontage:Math.max(0,d),topography:String(o.tipoSolo||"plano").trim(),zoning:String(o.zoneamento||"residential").trim()}}else{const n=Number(o.preco),l=Number(o.areaConstruida),d=Number(o.quartos),f=Number(o.banheiros),m=Number(o.garagem);console.log(`🏠 [${s.toUpperCase()}] Validando imóvel:`),console.log("   - preco:",o.preco,"→",n,isNaN(n)),console.log("   - areaConstruida:",o.areaConstruida,"→",l,isNaN(l)),console.log("   - quartos:",o.quartos,"→",d,isNaN(d)),console.log("   - banheiros:",o.banheiros,"→",f,isNaN(f)),console.log("   - garagem:",o.garagem,"→",m,isNaN(m)),T={...x,value:Math.max(0,n),area:Math.max(0,l),builtArea:Math.max(0,l),bedrooms:Math.max(0,Math.floor(d)),bathrooms:Math.max(0,Math.floor(f)),parkingSpaces:Math.max(0,Math.floor(m))}}const pe=(n,l="")=>{const d=[];for(const[f,m]of Object.entries(n)){const A=l?`${l}.${f}`:f;m===void 0?d.push(`${A} = undefined`):m===null?d.push(`${A} = null`):typeof m=="number"&&isNaN(m)?d.push(`${A} = NaN`):typeof m=="object"&&m!==null&&!Array.isArray(m)&&d.push(...pe(m,A))}return d},ge=pe(T);ge.length>0&&console.error(`❌ [${s.toUpperCase()}] Campos inválidos detectados:`,ge),console.log(`🧽 [${s.toUpperCase()}] LIMPEZA FINAL - Removendo campos problemáticos:`);const h=JSON.parse(JSON.stringify(T,(n,l)=>{if(l==null){console.log(`   - Removendo ${n}: ${l}`);return}return typeof l=="number"&&isNaN(l)?(console.log(`   - Convertendo NaN em ${n} para 0`),0):l}));return!h.name&&h.title&&(h.name=h.title,console.log(`🔧 [${s.toUpperCase()}] Adicionando campo name obrigatório:`,h.name)),(typeof h.area!="number"||h.area<=0)&&(h.area=100,console.log(`🔧 [${s.toUpperCase()}] Definindo área padrão:`,h.area)),(typeof h.value!="number"||h.value<0)&&(h.value=0,console.log(`🔧 [${s.toUpperCase()}] Definindo valor padrão:`,h.value)),console.log(`✅ [${s.toUpperCase()}] Dados finais limpos:`,JSON.stringify(h,null,2)),h},[u==null?void 0:u.id]);g.useEffect(()=>{ee&&z&&(L(!0),console.log("📝 MUDANÇAS DETECTADAS - Salvamento manual necessário"))},[ee,z]);const Te=Se(async r=>{X(!0);try{if(console.log("🚀 SUBMIT iniciado"),e!=null&&e.id){console.log("📝 SUBMIT - Atualizando produto existente:",e.id);const s=Ae(r,"submit");console.log("📤 SUBMIT - Enviando dados para API:",JSON.stringify(s,null,2)),await Ye(e.id,s),R.success("Produto atualizado com sucesso!"),console.log("✅ SUBMIT - Sucesso!")}else{if(!(u!=null&&u.id)){R.error("Nenhuma imobiliária selecionada. Selecione uma imobiliária antes de criar o produto.");return}const s={...r,realEstateId:u.id};console.log("📋 Dados completos para criação:",s),console.log("🏢 Imobiliária atual:",u),await Ke(s),console.log("🔄 Forçando invalidação do cache da lista...");const C=`${ke.property.list}?real_estate_id=${u.id}`;await he(C),await he(()=>!0),R.success("Produto criado com sucesso!"),console.log("✅ Cache invalidado, produto deve aparecer na lista!")}L(!1),U.push(_.dashboard.property.root)}catch(s){console.error("❌ SUBMIT - Erro detalhado:",{message:s instanceof Error?s.message:"Erro desconhecido",stack:s instanceof Error?s.stack:void 0,productId:e==null?void 0:e.id,realEstateId:u==null?void 0:u.id,isUpdate:!!(e!=null&&e.id),formData:r,timestamp:new Date().toISOString()});let C="Erro ao salvar produto";s instanceof Error&&(s.message.includes("Dados inválidos")?C="Dados inválidos: Verifique os campos obrigatórios e valores numéricos":s.message.includes("400")?C="Erro de validação: Dados não aceitos pelo servidor":C=s.message),R.error(C)}finally{X(!1)}}),Ie=g.useCallback(()=>{k?M.onTrue():U.push(_.dashboard.property.root)},[k,M,U]);g.useEffect(()=>{p==="empreendimento"&&j.length===0&&O({area:0,precoPorM2:0,descricao:""})},[p,j.length,O]);const ne=g.useMemo(()=>p!=="empreendimento"?null:a.jsxs(N,{spacing:3,children:[a.jsxs(S,{variant:"h6",sx:{display:"flex",alignItems:"center",gap:1},children:[a.jsx(D,{icon:"eva:home-outline"}),"Plantas do Empreendimento"]}),j.map((r,s)=>a.jsx(V,{sx:{p:3},children:a.jsxs(N,{spacing:2,children:[a.jsxs(I,{sx:{display:"flex",justifyContent:"space-between",alignItems:"center"},children:[a.jsxs(S,{variant:"subtitle2",color:"primary",children:["Planta ",s+1]}),j.length>1&&a.jsx(q,{size:"small",color:"error",onClick:()=>se(s),startIcon:a.jsx(D,{icon:"eva:trash-2-outline"}),children:"Remover"})]}),a.jsxs(I,{sx:{display:"grid",gap:2,gridTemplateColumns:{xs:"1fr",sm:"1fr 1fr"}},children:[a.jsx(c.Number,{name:`plantas.${s}.area`,label:"Área (m²)",placeholder:"Ex: 65",required:!0}),a.jsx(c.Number,{name:`plantas.${s}.precoPorM2`,label:"Preço por m²",placeholder:"Ex: 8500",formatCurrency:!0,required:!0})]})]})},r.id)),j.length<10&&a.jsx(q,{variant:"outlined",onClick:oe,startIcon:a.jsx(D,{icon:"eva:plus-outline"}),sx:{alignSelf:"flex-start"},children:"Adicionar Planta"}),j.length>=10&&a.jsx(ue,{severity:"info",children:"Máximo de 10 plantas atingido."})]}),[p,j,oe,se]),te=g.useMemo(()=>p==="imovel"?a.jsxs(I,{rowGap:3,columnGap:2,display:"grid",gridTemplateColumns:{xs:"repeat(1, 1fr)",sm:"repeat(2, 1fr)"},children:[a.jsx(c.Number,{name:"quartos",label:"Quartos"}),a.jsx(c.Number,{name:"banheiros",label:"Banheiros"}),a.jsx(c.Number,{name:"garagem",label:"Garagem"}),a.jsx(c.Number,{name:"areaConstruida",label:"Área Construída (m²)"})]}):p==="terreno"?a.jsxs(I,{rowGap:3,columnGap:2,display:"grid",gridTemplateColumns:{xs:"repeat(1, 1fr)",sm:"repeat(2, 1fr)"},children:[a.jsx(c.Number,{name:"area",label:"Área (m²)"}),a.jsx(c.Number,{name:"frente",label:"Frente (m)"}),a.jsx(c.Text,{name:"tipoSolo",label:"Tipo de Solo"}),a.jsx(c.Text,{name:"zoneamento",label:"Zoneamento"})]}):p==="empreendimento"?a.jsxs(N,{spacing:3,children:[a.jsxs(I,{rowGap:3,columnGap:2,display:"grid",gridTemplateColumns:{xs:"repeat(1, 1fr)",sm:"repeat(2, 1fr)"},children:[a.jsx(c.Text,{name:"construtora",label:"Construtora"}),a.jsx(c.DatePicker,{name:"previsaoEntrega",label:"Previsão de Entrega"}),a.jsx(c.Number,{name:"unidadesDisponiveis",label:"Unidades Disponíveis",helperText:"Número total de unidades no empreendimento"})]}),a.jsx(w,{}),ne]}):null,[p,ne]),J=g.useMemo(()=>a.jsxs(N,{spacing:3,children:[a.jsxs(c.Select,{name:"tipo",label:"Tipo de Produto",value:p,onChange:r=>ie(r.target.value),required:!0,"aria-describedby":"tipo-help","aria-label":"Selecionar tipo de produto",InputProps:{startAdornment:a.jsx(B,{position:"start",children:a.jsx(D,{icon:"eva:cube-outline","aria-hidden":"true"})})},children:[a.jsx(t,{value:"imovel","aria-label":"Selecionar imóvel",children:"Imóvel"}),a.jsx(t,{value:"terreno","aria-label":"Selecionar terreno",children:"Terreno"}),a.jsx(t,{value:"empreendimento","aria-label":"Selecionar empreendimento",children:"Empreendimento"})]}),a.jsx(S,{variant:"caption",id:"tipo-help",color:"text.secondary",children:"Selecione o tipo de produto que você deseja cadastrar"}),a.jsx(c.Text,{name:"titulo",label:"Título",required:!0,placeholder:p==="empreendimento"?"Ex: Future Design Empreendimento":p==="terreno"?"Ex: Terreno 500m² no Centro":"Ex: Apartamento 3 quartos Vila Madalena","aria-describedby":"titulo-help","aria-label":`Título do ${p}`,InputProps:{startAdornment:a.jsx(B,{position:"start",children:a.jsx(D,{icon:"eva:edit-outline","aria-hidden":"true"})})}}),a.jsx(S,{variant:"caption",id:"titulo-help",color:"text.secondary",children:"Título chamativo e descritivo (3-100 caracteres)"}),p!=="empreendimento"&&a.jsxs(a.Fragment,{children:[a.jsx(c.Number,{name:"preco",label:"Preço",required:!0,placeholder:"R$ 0,00",formatCurrency:!0,"aria-describedby":"preco-help"}),a.jsx(S,{variant:"caption",id:"preco-help",color:"text.secondary",children:"Valor em reais (R$)"})]}),a.jsx(S,{variant:"h6",sx:{mt:2,mb:1},children:"Endereço"}),a.jsxs(I,{sx:{display:"grid",gap:2,gridTemplateColumns:{xs:"1fr",md:"2fr 1fr"}},children:[a.jsx(c.Text,{name:"rua",label:"Rua",required:!0,placeholder:"Ex: Rua das Flores",InputProps:{startAdornment:a.jsx(B,{position:"start",children:a.jsx(D,{icon:"eva:pin-outline","aria-hidden":"true"})})}}),a.jsx(c.Text,{name:"numero",label:"Número",required:!0,placeholder:"Ex: 123"})]}),a.jsxs(I,{sx:{display:"grid",gap:2,gridTemplateColumns:{xs:"1fr",md:"1fr 1fr"}},children:[a.jsx(c.Text,{name:"complemento",label:"Complemento",placeholder:"Ex: Apto 45, Bloco B"}),a.jsx(c.Text,{name:"bairro",label:"Bairro",required:!0,placeholder:"Ex: Centro"})]}),a.jsxs(I,{sx:{display:"grid",gap:2,gridTemplateColumns:{xs:"1fr",md:"2fr 1fr 1fr"}},children:[a.jsx(c.Text,{name:"cidade",label:"Cidade",required:!0,placeholder:"Ex: São Paulo"}),a.jsxs(c.Select,{name:"estado",label:"Estado",required:!0,children:[a.jsx(t,{value:"AC",children:"AC"}),a.jsx(t,{value:"AL",children:"AL"}),a.jsx(t,{value:"AP",children:"AP"}),a.jsx(t,{value:"AM",children:"AM"}),a.jsx(t,{value:"BA",children:"BA"}),a.jsx(t,{value:"CE",children:"CE"}),a.jsx(t,{value:"DF",children:"DF"}),a.jsx(t,{value:"ES",children:"ES"}),a.jsx(t,{value:"GO",children:"GO"}),a.jsx(t,{value:"MA",children:"MA"}),a.jsx(t,{value:"MT",children:"MT"}),a.jsx(t,{value:"MS",children:"MS"}),a.jsx(t,{value:"MG",children:"MG"}),a.jsx(t,{value:"PA",children:"PA"}),a.jsx(t,{value:"PB",children:"PB"}),a.jsx(t,{value:"PR",children:"PR"}),a.jsx(t,{value:"PE",children:"PE"}),a.jsx(t,{value:"PI",children:"PI"}),a.jsx(t,{value:"RJ",children:"RJ"}),a.jsx(t,{value:"RN",children:"RN"}),a.jsx(t,{value:"RS",children:"RS"}),a.jsx(t,{value:"RO",children:"RO"}),a.jsx(t,{value:"RR",children:"RR"}),a.jsx(t,{value:"SC",children:"SC"}),a.jsx(t,{value:"SP",children:"SP"}),a.jsx(t,{value:"SE",children:"SE"}),a.jsx(t,{value:"TO",children:"TO"})]}),a.jsx(c.Text,{name:"cep",label:"CEP",required:!0,placeholder:"00000-000",inputProps:{maxLength:9}})]}),a.jsx(S,{variant:"caption",color:"text.secondary",children:"Preencha todos os campos de endereço para melhor localização do Imóvel"}),a.jsx(c.Text,{name:"descricao",label:"Descrição",multiline:!0,rows:4,required:!0,placeholder:p==="empreendimento"?"Descreva as características principais do empreendimento...":p==="terreno"?"Descreva as características do terreno (topografia, localização, potencial de uso)...":"Descreva as características principais do Imóvel (quartos, área, diferenciais)...","aria-describedby":"descricao-help","aria-label":`Descrição detalhada do ${p}`,InputProps:{startAdornment:a.jsx(B,{position:"start",sx:{alignSelf:"flex-start",mt:1},children:a.jsx(D,{icon:"eva:file-text-outline","aria-hidden":"true"})})}}),a.jsx(S,{variant:"caption",id:"descricao-help",color:"text.secondary",children:"Descrição detalhada (10-1000 caracteres)"})]}),[p,ie]),Me=g.useMemo(()=>W?a.jsxs(Xe,{expanded:p==="empreendimento"?!0:K.basic!==!1,onChange:p==="empreendimento"?void 0:()=>le("basic"),defaultExpanded:!0,children:[a.jsxs(ye,{expandIcon:p==="empreendimento"?null:a.jsx(D,{icon:"eva:arrow-down-fill"}),sx:{"& .MuiAccordionSummary-content":{alignItems:"center",gap:1}},children:[a.jsx(D,{icon:"eva:file-text-outline",width:20}),a.jsx(S,{variant:"h6",children:"Informações Básicas"}),a.jsx(Le,{size:"small",label:"Obrigatório",color:"primary"})]}),a.jsx(Pe,{children:a.jsx(N,{spacing:3,children:J})})]}):a.jsxs(V,{role:"region","aria-labelledby":"basic-fields-title",children:[a.jsx(Z,{id:"basic-fields-title",title:"Informações Básicas",subheader:"Dados principais do produto",sx:{mb:3},titleTypographyProps:{component:"h2","aria-level":2}}),a.jsx(w,{}),a.jsx(N,{spacing:3,sx:{p:{xs:2,sm:3}},role:"group","aria-labelledby":"basic-fields-title",children:J})]}),[W,p,K.basic,le,J]);return a.jsxs(Ge,{methods:F,onSubmit:Te,children:[a.jsxs(N,{spacing:3,children:[Me,te&&a.jsxs(V,{children:[a.jsx(Z,{title:"Informações Específicas",subheader:`Dados específicos para ${p}`,sx:{mb:3}}),a.jsx(w,{}),a.jsx(N,{spacing:3,sx:{p:{xs:2,sm:3}},children:te})]}),a.jsxs(V,{children:[a.jsx(Z,{title:"Ações do Produto",subheader:"Salvar ou cancelar alterações",sx:{mb:2}}),a.jsx(w,{}),a.jsxs(N,{spacing:3,sx:{p:3},children:[k&&a.jsxs(ue,{severity:"info",children:[a.jsx(ea,{children:"Mudanças detectadas"}),'Você tem alterações não salvas. Use o botão "Salvar Produto" para persistir as mudanças.',y&&a.jsxs(S,{variant:"caption",display:"block",sx:{mt:1},children:["Último salvamento: ",y.toLocaleTimeString()]})]}),a.jsxs(N,{direction:"row",spacing:2,justifyContent:"flex-end",flexWrap:"wrap",children:[a.jsx(q,{variant:"outlined",onClick:Ie,children:"Cancelar"}),a.jsxs(Je,{type:"submit",variant:"contained",color:"primary",loading:je,startIcon:a.jsx(D,{icon:"eva:save-outline"}),children:[e?"Atualizar":"Criar"," Produto"]})]})]})]})]}),a.jsxs(_e,{open:M.value,onClose:M.onFalse,children:[a.jsx(Ze,{children:"Alterações não salvas"}),a.jsx(He,{children:a.jsx(S,{children:"Você tem alterações não salvas. Deseja sair sem salvar?"})}),a.jsxs(Qe,{children:[a.jsx(q,{onClick:M.onFalse,children:"Cancelar"}),a.jsx(q,{onClick:()=>{M.onFalse(),U.push(_.dashboard.property.root)},color:"error",children:"Sair sem salvar"})]})]})]})}export{Sa as P};

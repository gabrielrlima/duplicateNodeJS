import {
  TextField_default
} from "./chunk-4BF6NJ5N.js";
import "./chunk-74AUWOTH.js";
import "./chunk-VP3CUR3L.js";
import "./chunk-35GCPTKR.js";
import "./chunk-6Q3FXRAM.js";
import "./chunk-TTMXIRSR.js";
import "./chunk-ED3YUB4D.js";
import "./chunk-BZ6LP2RK.js";
import "./chunk-WBLYXFO5.js";
import "./chunk-LFTAGM2U.js";
import "./chunk-JF4QN6YU.js";
import "./chunk-KWKJOHW5.js";
import "./chunk-QOTPOA7H.js";
import "./chunk-M6OXJZG2.js";
import "./chunk-QZRZ7IQP.js";
import "./chunk-7ZLVSGVV.js";
import "./chunk-PASMWYAI.js";
import {
  Box_default
} from "./chunk-PFISHSBB.js";
import "./chunk-B57ZXVAY.js";
import "./chunk-FY7RCC45.js";
import "./chunk-OZSCBVZE.js";
import "./chunk-QWIHDDYY.js";
import "./chunk-NBKRBOCP.js";
import "./chunk-ZEJJVUH5.js";
import "./chunk-WW2M23WF.js";
import "./chunk-3HPN5KNE.js";
import "./chunk-PR6ZCO7G.js";
import "./chunk-AKKANAVW.js";
import "./chunk-CIBSS3Q2.js";
import "./chunk-ZOKU5DI5.js";
import "./chunk-4BGVWAC7.js";
import "./chunk-T635I644.js";
import "./chunk-THPE6HM2.js";
import "./chunk-AACZXOME.js";
import "./chunk-E3ZF6YM2.js";
import "./chunk-SUNX3K6F.js";
import "./chunk-56NJAI5N.js";
import "./chunk-Y7QXPETG.js";
import "./chunk-TIP6WHAK.js";
import "./chunk-XXDMKUAV.js";
import "./chunk-KQEBN47O.js";
import "./chunk-AYIZBOSQ.js";
import "./chunk-5JQ2EFO2.js";
import "./chunk-YFF74JAC.js";
import "./chunk-FBWAEBBC.js";
import "./chunk-Z36AX5XC.js";
import "./chunk-B5RSN6PF.js";
import "./chunk-5MV65BC7.js";
import "./chunk-XLNBAAFE.js";
import "./chunk-CLD3QQKQ.js";
import "./chunk-5RTSTOGV.js";
import "./chunk-KG7RVMXZ.js";
import "./chunk-BFL632LT.js";
import "./chunk-FC7KWCQD.js";
import {
  styled_default
} from "./chunk-FQRNHRAS.js";
import "./chunk-PX4MJDPY.js";
import "./chunk-HTIHEVP5.js";
import "./chunk-AA5XXLR4.js";
import {
  require_jsx_runtime
} from "./chunk-IULEFUF5.js";
import "./chunk-M5VEBJZV.js";
import "./chunk-W5BO2KNX.js";
import "./chunk-SGWTPM65.js";
import "./chunk-T5TDCSU7.js";
import "./chunk-U3GC6S25.js";
import "./chunk-EQCCHGRT.js";
import "./chunk-L2P6ZJGI.js";
import {
  require_react
} from "./chunk-I773Y2XN.js";
import "./chunk-5SN3YHXX.js";
import "./chunk-TPTFS77Q.js";
import {
  __toESM
} from "./chunk-LK32TJAX.js";

// node_modules/mui-one-time-password-input/dist/mui-one-time-password-input.es.js
var import_jsx_runtime = __toESM(require_jsx_runtime());
var import_react = __toESM(require_react());
var G = styled_default(TextField_default)`
  input {
    text-align: center;
  }
`;
var J = {
  TextFieldStyled: G
};
var Q = (n) => (0, import_jsx_runtime.jsx)(J.TextFieldStyled, { ...n });
var D = {
  left: "ArrowLeft",
  right: "ArrowRight",
  backspace: "Backspace",
  home: "Home",
  end: "End"
};
function U(n, s) {
  return n <= 0 ? [] : Array.from({ length: n }, s);
}
function X(n, s, l) {
  return n.map((i, F) => s === F ? l : i);
}
function P(n) {
  return n.join("");
}
function M(n, s) {
  return [...n, s];
}
function Z(n, s, l) {
  return n.reduce(
    (i, F, C) => {
      const { characters: y, restArrayMerged: d } = i;
      if (C < l)
        return {
          restArrayMerged: d,
          characters: M(y, F)
        };
      const [V, ...E] = d;
      return {
        restArrayMerged: E,
        characters: M(y, V || "")
      };
    },
    {
      restArrayMerged: s,
      characters: []
    }
  ).characters;
}
function v(n) {
  return (s) => {
    n.forEach((l) => {
      typeof l == "function" ? l(s) : l != null && (l.current = s);
    });
  };
}
function ee(n) {
  return n.split("");
}
function N(n) {
  const s = import_react.default.useRef(() => {
    throw new Error("Cannot call an event handler while rendering.");
  });
  return import_react.default.useInsertionEffect(() => {
    s.current = n;
  }), import_react.default.useCallback((...l) => {
    var _a;
    return (_a = s.current) == null ? void 0 : _a.call(s, ...l);
  }, []);
}
var te = () => true;
var le = import_react.default.forwardRef(
  (n, s) => {
    const {
      value: l = "",
      length: i = 4,
      autoFocus: F = false,
      onChange: C,
      TextFieldsProps: y,
      onComplete: d,
      validateChar: V = te,
      className: E,
      onBlur: b,
      ...K
    } = n, j = import_react.default.useRef(l), w = N(d), I = N((e) => {
      const t = e.slice(0, i);
      return {
        isCompleted: t.length === i,
        finalValue: t
      };
    });
    import_react.default.useEffect(() => {
      const { isCompleted: e, finalValue: t } = I(
        j.current
      );
      e && w(t);
    }, [i, w, I]);
    const p = U(
      i,
      (e, t) => ({
        character: l[t] || "",
        inputRef: import_react.default.createRef()
      })
    ), T = (e) => p.findIndex(({ inputRef: t }) => t.current === e), k = () => p.map(({ character: e }) => e), A = (e, t) => {
      const r = X(
        k(),
        e,
        t
      );
      return P(r);
    }, $ = (e) => {
      var _a, _b;
      (_b = (_a = p[e]) == null ? void 0 : _a.inputRef.current) == null ? void 0 : _b.focus();
    }, c = (e) => {
      var _a, _b;
      (_b = (_a = p[e]) == null ? void 0 : _a.inputRef.current) == null ? void 0 : _b.select();
    }, O = (e) => {
      e + 1 !== i && (p[e + 1].character ? c(e + 1) : $(e + 1));
    }, S = (e, t) => typeof V != "function" ? true : V(e, t), Y = (e) => {
      const t = T(e.target);
      if (t === 0 && e.target.value.length > 1) {
        const { finalValue: m, isCompleted: B } = I(
          e.target.value
        );
        C == null ? void 0 : C(m), B && (d == null ? void 0 : d(m)), c(m.length - 1);
        return;
      }
      const r = e.target.value[0] || "";
      let u = r;
      u && !S(u, t) && (u = "");
      const a = A(t, u);
      C == null ? void 0 : C(a);
      const { isCompleted: h, finalValue: f } = I(a);
      h && (d == null ? void 0 : d(f)), u !== "" ? a.length - 1 < t ? c(a.length) : O(t) : r === "" && a.length <= t && c(t - 1);
    }, _ = (e) => {
      const t = e.target, r = t.selectionStart, u = t.selectionEnd, a = T(t), h = r === 0 && u === 0;
      if (t.value === e.key)
        e.preventDefault(), O(a);
      else if (D.backspace === e.key) {
        if (!t.value)
          e.preventDefault(), c(a - 1);
        else if (h) {
          e.preventDefault();
          const f = A(a, "");
          C == null ? void 0 : C(f), f.length <= a && c(a - 1);
        }
      } else D.left === e.key ? (e.preventDefault(), c(a - 1)) : D.right === e.key ? (e.preventDefault(), c(a + 1)) : D.home === e.key ? (e.preventDefault(), c(0)) : D.end === e.key && (e.preventDefault(), c(p.length - 1));
    }, H = (e) => {
      const t = e.clipboardData.getData("text/plain"), r = e.target, u = p.findIndex(
        ({ character: x, inputRef: o }) => x === "" || o.current === r
      ), a = k(), h = Z(
        a,
        ee(t),
        u
      ).map((x, o) => S(x, o) ? x : ""), f = P(h);
      C == null ? void 0 : C(f);
      const { isCompleted: m, finalValue: B } = I(f);
      m ? (d == null ? void 0 : d(B), c(i - 1)) : c(f.length);
    }, L = (e) => {
      if (!p.some(({ inputRef: r }) => r.current === e.relatedTarget)) {
        const { isCompleted: r, finalValue: u } = I(l);
        b == null ? void 0 : b(u, r);
      }
    };
    return (0, import_jsx_runtime.jsx)(
      Box_default,
      {
        display: "flex",
        gap: "20px",
        alignItems: "center",
        ref: s,
        className: `MuiOtpInput-Box ${E || ""}`,
        ...K,
        children: p.map(({ character: e, inputRef: t }, r) => {
          const {
            onPaste: u,
            onFocus: a,
            onKeyDown: h,
            className: f,
            onBlur: m,
            inputRef: B,
            ...x
          } = typeof y == "function" ? y(r) || {} : y || {};
          return (0, import_jsx_runtime.jsx)(
            Q,
            {
              autoFocus: F ? r === 0 : false,
              autoComplete: "one-time-code",
              value: e,
              inputRef: v([t, B]),
              className: `MuiOtpInput-TextField MuiOtpInput-TextField-${r + 1} ${f || ""}`,
              onPaste: (o) => {
                o.preventDefault(), H(o), u == null ? void 0 : u(o);
              },
              onFocus: (o) => {
                o.preventDefault(), o.target.select(), a == null ? void 0 : a(o);
              },
              onChange: Y,
              onKeyDown: (o) => {
                _(o), h == null ? void 0 : h(o);
              },
              onBlur: (o) => {
                m == null ? void 0 : m(o), L(o);
              },
              ...x
            },
            r
          );
        })
      }
    );
  }
);
export {
  le as MuiOtpInput
};
//# sourceMappingURL=mui-one-time-password-input.js.map

import {
  chainPropTypes
} from "./chunk-G3RW23Z7.js";
import {
  ownerDocument
} from "./chunk-TKOSUKCE.js";
import {
  clsx_default
} from "./chunk-TD4IUV5I.js";
import {
  require_react_is
} from "./chunk-Y7XITPRB.js";
import {
  require_prop_types
} from "./chunk-MVBLUKDZ.js";
import {
  require_react
} from "./chunk-KBP2TVUK.js";
import {
  __publicField,
  __toESM
} from "./chunk-LK32TJAX.js";

// node_modules/.pnpm/@mui+utils@7.3.1_@types+react@18.3.23_react@18.3.1/node_modules/@mui/utils/esm/useOnMount/useOnMount.js
var React = __toESM(require_react(), 1);
var EMPTY = [];
function useOnMount(fn) {
  React.useEffect(fn, EMPTY);
}

// node_modules/.pnpm/@mui+utils@7.3.1_@types+react@18.3.23_react@18.3.1/node_modules/@mui/utils/esm/useLazyRef/useLazyRef.js
var React2 = __toESM(require_react(), 1);
var UNINITIALIZED = {};
function useLazyRef(init, initArg) {
  const ref = React2.useRef(UNINITIALIZED);
  if (ref.current === UNINITIALIZED) {
    ref.current = init(initArg);
  }
  return ref;
}

// node_modules/.pnpm/@mui+utils@7.3.1_@types+react@18.3.23_react@18.3.1/node_modules/@mui/utils/esm/HTMLElementType/HTMLElementType.js
function HTMLElementType(props, propName, componentName, location, propFullName) {
  if (false) {
    return null;
  }
  const propValue = props[propName];
  const safePropName = propFullName || propName;
  if (propValue == null) {
    return null;
  }
  if (propValue && propValue.nodeType !== 1) {
    return new Error(`Invalid ${location} \`${safePropName}\` supplied to \`${componentName}\`. Expected an HTMLElement.`);
  }
  return null;
}

// node_modules/.pnpm/@mui+utils@7.3.1_@types+react@18.3.23_react@18.3.1/node_modules/@mui/utils/esm/refType/refType.js
var import_prop_types = __toESM(require_prop_types(), 1);
var refType = import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]);
var refType_default = refType;

// node_modules/.pnpm/@mui+utils@7.3.1_@types+react@18.3.23_react@18.3.1/node_modules/@mui/utils/esm/capitalize/capitalize.js
function capitalize(string) {
  if (typeof string !== "string") {
    throw new Error(true ? "MUI: `capitalize(string)` expects a string argument." : formatMuiErrorMessage(7));
  }
  return string.charAt(0).toUpperCase() + string.slice(1);
}

// node_modules/.pnpm/@mui+utils@7.3.1_@types+react@18.3.23_react@18.3.1/node_modules/@mui/utils/esm/debounce/debounce.js
function debounce(func, wait = 166) {
  let timeout;
  function debounced(...args) {
    const later = () => {
      func.apply(this, args);
    };
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
  }
  debounced.clear = () => {
    clearTimeout(timeout);
  };
  return debounced;
}

// node_modules/.pnpm/@mui+utils@7.3.1_@types+react@18.3.23_react@18.3.1/node_modules/@mui/utils/esm/useId/useId.js
var React3 = __toESM(require_react(), 1);
var globalId = 0;
function useGlobalId(idOverride) {
  const [defaultId, setDefaultId] = React3.useState(idOverride);
  const id = idOverride || defaultId;
  React3.useEffect(() => {
    if (defaultId == null) {
      globalId += 1;
      setDefaultId(`mui-${globalId}`);
    }
  }, [defaultId]);
  return id;
}
var safeReact = {
  ...React3
};
var maybeReactUseId = safeReact.useId;
function useId(idOverride) {
  if (maybeReactUseId !== void 0) {
    const reactId = maybeReactUseId();
    return idOverride ?? reactId;
  }
  return useGlobalId(idOverride);
}

// node_modules/.pnpm/@mui+utils@7.3.1_@types+react@18.3.23_react@18.3.1/node_modules/@mui/utils/esm/useTimeout/useTimeout.js
var Timeout = class _Timeout {
  constructor() {
    __publicField(this, "currentId", null);
    __publicField(this, "clear", () => {
      if (this.currentId !== null) {
        clearTimeout(this.currentId);
        this.currentId = null;
      }
    });
    __publicField(this, "disposeEffect", () => {
      return this.clear;
    });
  }
  static create() {
    return new _Timeout();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(delay, fn) {
    this.clear();
    this.currentId = setTimeout(() => {
      this.currentId = null;
      fn();
    }, delay);
  }
};
function useTimeout() {
  const timeout = useLazyRef(Timeout.create).current;
  useOnMount(timeout.disposeEffect);
  return timeout;
}

// node_modules/.pnpm/@mui+utils@7.3.1_@types+react@18.3.23_react@18.3.1/node_modules/@mui/utils/esm/deepmerge/deepmerge.js
var React4 = __toESM(require_react(), 1);
var import_react_is = __toESM(require_react_is(), 1);

// node_modules/.pnpm/@mui+utils@7.3.1_@types+react@18.3.23_react@18.3.1/node_modules/@mui/utils/esm/elementAcceptingRef/elementAcceptingRef.js
var import_prop_types2 = __toESM(require_prop_types(), 1);
function isClassComponent(elementType) {
  const {
    prototype = {}
  } = elementType;
  return Boolean(prototype.isReactComponent);
}
function acceptingRef(props, propName, componentName, location, propFullName) {
  const element = props[propName];
  const safePropName = propFullName || propName;
  if (element == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window === "undefined") {
    return null;
  }
  let warningHint;
  const elementType = element.type;
  if (typeof elementType === "function" && !isClassComponent(elementType)) {
    warningHint = "Did you accidentally use a plain function component for an element instead?";
  }
  if (warningHint !== void 0) {
    return new Error(`Invalid ${location} \`${safePropName}\` supplied to \`${componentName}\`. Expected an element that can hold a ref. ${warningHint} For more information see https://mui.com/r/caveat-with-refs-guide`);
  }
  return null;
}
var elementAcceptingRef = chainPropTypes(import_prop_types2.default.element, acceptingRef);
elementAcceptingRef.isRequired = chainPropTypes(import_prop_types2.default.element.isRequired, acceptingRef);

// node_modules/.pnpm/@mui+utils@7.3.1_@types+react@18.3.23_react@18.3.1/node_modules/@mui/utils/esm/getDisplayName/getDisplayName.js
var import_react_is2 = __toESM(require_react_is(), 1);

// node_modules/.pnpm/@mui+utils@7.3.1_@types+react@18.3.23_react@18.3.1/node_modules/@mui/utils/esm/ponyfillGlobal/ponyfillGlobal.js
var ponyfillGlobal_default = typeof window != "undefined" && window.Math == Math ? window : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();

// node_modules/.pnpm/@mui+utils@7.3.1_@types+react@18.3.23_react@18.3.1/node_modules/@mui/utils/esm/isMuiElement/isMuiElement.js
var React5 = __toESM(require_react(), 1);

// node_modules/.pnpm/@mui+utils@7.3.1_@types+react@18.3.23_react@18.3.1/node_modules/@mui/utils/esm/ownerWindow/ownerWindow.js
function ownerWindow(node) {
  const doc = ownerDocument(node);
  return doc.defaultView || window;
}

// node_modules/.pnpm/@mui+utils@7.3.1_@types+react@18.3.23_react@18.3.1/node_modules/@mui/utils/esm/useControlled/useControlled.js
var React6 = __toESM(require_react(), 1);
function useControlled(props) {
  const {
    controlled,
    default: defaultProp,
    name,
    state = "value"
  } = props;
  const {
    current: isControlled
  } = React6.useRef(controlled !== void 0);
  const [valueState, setValue] = React6.useState(defaultProp);
  const value = isControlled ? controlled : valueState;
  if (true) {
    React6.useEffect(() => {
      if (isControlled !== (controlled !== void 0)) {
        console.error([`MUI: A component is changing the ${isControlled ? "" : "un"}controlled ${state} state of ${name} to be ${isControlled ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${name} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join("\n"));
      }
    }, [state, name, controlled]);
    const {
      current: defaultValue
    } = React6.useRef(defaultProp);
    React6.useEffect(() => {
      if (!isControlled && !Object.is(defaultValue, defaultProp)) {
        console.error([`MUI: A component is changing the default ${state} state of an uncontrolled ${name} after being initialized. To suppress this warning opt to use a controlled ${name}.`].join("\n"));
      }
    }, [JSON.stringify(defaultProp)]);
  }
  const setValueIfUncontrolled = React6.useCallback((newValue) => {
    if (!isControlled) {
      setValue(newValue);
    }
  }, []);
  return [value, setValueIfUncontrolled];
}

// node_modules/.pnpm/@mui+utils@7.3.1_@types+react@18.3.23_react@18.3.1/node_modules/@mui/utils/esm/useIsFocusVisible/useIsFocusVisible.js
var React7 = __toESM(require_react(), 1);
var hadFocusVisibleRecentlyTimeout = new Timeout();

// node_modules/.pnpm/@mui+utils@7.3.1_@types+react@18.3.23_react@18.3.1/node_modules/@mui/utils/esm/usePreviousProps/usePreviousProps.js
var React8 = __toESM(require_react(), 1);

// node_modules/.pnpm/@mui+utils@7.3.1_@types+react@18.3.23_react@18.3.1/node_modules/@mui/utils/esm/getValidReactChildren/getValidReactChildren.js
var React9 = __toESM(require_react(), 1);

// node_modules/.pnpm/@mui+utils@7.3.1_@types+react@18.3.23_react@18.3.1/node_modules/@mui/utils/esm/visuallyHidden/visuallyHidden.js
var visuallyHidden = {
  border: 0,
  clip: "rect(0 0 0 0)",
  height: "1px",
  margin: "-1px",
  overflow: "hidden",
  padding: 0,
  position: "absolute",
  whiteSpace: "nowrap",
  width: "1px"
};
var visuallyHidden_default = visuallyHidden;

// node_modules/.pnpm/@mui+utils@7.3.1_@types+react@18.3.23_react@18.3.1/node_modules/@mui/utils/esm/integerPropType/integerPropType.js
function getTypeByValue(value) {
  const valueType = typeof value;
  switch (valueType) {
    case "number":
      if (Number.isNaN(value)) {
        return "NaN";
      }
      if (!Number.isFinite(value)) {
        return "Infinity";
      }
      if (value !== Math.floor(value)) {
        return "float";
      }
      return "number";
    case "object":
      if (value === null) {
        return "null";
      }
      return value.constructor.name;
    default:
      return valueType;
  }
}
function requiredInteger(props, propName, componentName, location) {
  const propValue = props[propName];
  if (propValue == null || !Number.isInteger(propValue)) {
    const propType = getTypeByValue(propValue);
    return new RangeError(`Invalid ${location} \`${propName}\` of type \`${propType}\` supplied to \`${componentName}\`, expected \`integer\`.`);
  }
  return null;
}
function validator(props, propName, componentName, location) {
  const propValue = props[propName];
  if (propValue === void 0) {
    return null;
  }
  return requiredInteger(props, propName, componentName, location);
}
function validatorNoop() {
  return null;
}
validator.isRequired = requiredInteger;
validatorNoop.isRequired = validatorNoop;

// node_modules/.pnpm/@mui+utils@7.3.1_@types+react@18.3.23_react@18.3.1/node_modules/@mui/utils/esm/resolveProps/resolveProps.js
function resolveProps(defaultProps, props, mergeClassNameAndStyle = false) {
  const output = {
    ...props
  };
  for (const key in defaultProps) {
    if (Object.prototype.hasOwnProperty.call(defaultProps, key)) {
      const propName = key;
      if (propName === "components" || propName === "slots") {
        output[propName] = {
          ...defaultProps[propName],
          ...output[propName]
        };
      } else if (propName === "componentsProps" || propName === "slotProps") {
        const defaultSlotProps = defaultProps[propName];
        const slotProps = props[propName];
        if (!slotProps) {
          output[propName] = defaultSlotProps || {};
        } else if (!defaultSlotProps) {
          output[propName] = slotProps;
        } else {
          output[propName] = {
            ...slotProps
          };
          for (const slotKey in defaultSlotProps) {
            if (Object.prototype.hasOwnProperty.call(defaultSlotProps, slotKey)) {
              const slotPropName = slotKey;
              output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName], mergeClassNameAndStyle);
            }
          }
        }
      } else if (propName === "className" && mergeClassNameAndStyle && props.className) {
        output.className = clsx_default(defaultProps == null ? void 0 : defaultProps.className, props == null ? void 0 : props.className);
      } else if (propName === "style" && mergeClassNameAndStyle && props.style) {
        output.style = {
          ...defaultProps == null ? void 0 : defaultProps.style,
          ...props == null ? void 0 : props.style
        };
      } else if (output[propName] === void 0) {
        output[propName] = defaultProps[propName];
      }
    }
  }
  return output;
}

// node_modules/.pnpm/@mui+utils@7.3.1_@types+react@18.3.23_react@18.3.1/node_modules/@mui/utils/esm/getReactNodeRef/getReactNodeRef.js
var React10 = __toESM(require_react(), 1);

// node_modules/.pnpm/@mui+utils@7.3.1_@types+react@18.3.23_react@18.3.1/node_modules/@mui/utils/esm/getReactElementRef/getReactElementRef.js
var React11 = __toESM(require_react(), 1);

export {
  useLazyRef,
  HTMLElementType,
  refType_default,
  capitalize,
  debounce,
  ownerWindow,
  useId,
  useControlled,
  useOnMount,
  useTimeout,
  visuallyHidden_default,
  resolveProps
};
/*! Bundled license information:

@mui/utils/esm/index.js:
  (**
   * @mui/utils v7.3.1
   *
   * @license MIT
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=chunk-MIWKBJ7Q.js.map
